---
name: CI

on: [push, pull_request]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: psf/black@stable

  dist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2

    - name: Install build dependencies
      run: pip --disable-pip-version-check install wheel

    - name: Build packages
      run: python setup.py sdist bdist_wheel

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

  check-doc:
    needs: [dist]
    runs-on: ubuntu-18.04
    
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install project
      run: pip --disable-pip-version-check install dist/*.whl

    - name: Extract docs from sdist
      working-directory: dist
      run: |
        tar xvf *.tar.gz
        mv */docs ..

    - name: Install docs requirements
      run: pip --disable-pip-version-check install -r docs/requirements.txt

    - name: Build docs
      run: make -C docs html SPHINXOPTS="-W --keep-going"

  test:
    needs: [dist]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-18.04]
        python_version: [3.6, 3.7, 3.8, 3.9]
        architecture: [x86, x64]
        exclude:
        - os: macos-latest
          architecture: x86
        - os: ubuntu-18.04
          architecture: x86

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}
        architecture: ${{ matrix.architecture }}

    - name: Install
      shell: bash
      run: pip --disable-pip-version-check install wheel dist/*.whl

    - name: Extract tests from sdist
      shell: bash
      working-directory: dist
      run: |
        tar xvf *.tar.gz
        mv */tests ..

    - name: Test wheel
      env:
        RPYBUILD_PARALLEL: 1
        RPYBUILD_STRIP_LIBPYTHON: 1
      working-directory: tests
      run: |
        python -m pip --disable-pip-version-check install -r requirements.txt
        python run_tests.py

  cross-build:
    needs: [dist]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
        - robotpy/roborio-cross-ubuntu:2021.3
        - robotpy/raspbian-cross-ubuntu:2021.2

    container:
      image: "${{ matrix.container }}"
    
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist

    - name: Install
      run: /build/venv/bin/cross-pip --disable-pip-version-check install dist/*.whl

    - name: Extract tests from sdist
      working-directory: dist
      run: |
        tar xvf *.tar.gz
        mv */tests ..

    - name: Build cross wheel
      env:
        RPYBUILD_PARALLEL: 1
        RPYBUILD_STRIP_LIBPYTHON: 1
      working-directory: tests/cpp
      run: /build/venv/bin/cross-python run_install.py wheel

  publish:
    runs-on: ubuntu-latest
    needs: [check, check-doc, test]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
